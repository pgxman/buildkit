name: Build
on:
  workflow_call:
    inputs:
      extensions:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      extensions:
        required: true
        type: string
jobs:
  set_matrix:
    name: Set Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          extensions=$(./script/list-extensions "${{ inputs.extensions }}")
          echo "matrix=$extensions" >> "$GITHUB_OUTPUT"
  build:
    name: Build Extensions
    runs-on: ${{ matrix.runs-on }}
    needs: set_matrix
    if: ${{ needs.set_matrix.outputs.matrix != '[]' && needs.set_matrix.outputs.matrix != '' }}
    permissions:
      packages: write
    strategy:
      fail-fast: true
      matrix:
        # NOTE: hard-coded supported arch & pgVersions for now
        # We may have `pgxman --supported-arches` & `pgxman --supported-pg-versions` in the future
        arch:
          - amd64
          - arm64
        pgVersion:
          - 13
          - 14
          - 15
          - 16
        extension: ${{ fromJSON(needs.set_matrix.outputs.matrix) }}
        include:
          - arch: amd64
            runs-on: ubuntu-latest
          - arch: arm64
            runs-on: buildjet-16vcpu-ubuntu-2204-arm
    steps:
      - uses: actions/checkout@v4
      - name: Calculate RUN_BUILD
        run: |
          RUN_BUILD=$(script/extension-support-pg-version "${{ matrix.extension }}" "${{ matrix.pgversion }}")
          echo "RUN_BUILD=$RUN_BUILD" >> "$GITHUB_ENV"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: ${{ env.RUN_BUILD == 'true' }}
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        if: ${{ env.RUN_BUILD == 'true' }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Install pgxman
        if: ${{ env.RUN_BUILD == 'true' }}
        run: |
          curl -sfL https://install.pgx.sh | sh -
      - name: Build
        if: ${{ env.RUN_BUILD == 'true' }}
        run: |
          pgxman build \
            --file "$(pwd)/buildkit/${{ matrix.extension }}.yaml" \
            --set "arch=[${{ matrix.arch }}]" \
            --set "pgVersions=[${{ matrix.pgVersion }}]" \
            --cache-from "type=gha" \
            --cache-to "type=gha,mode=max" \
            --debug
      - name: Upload Artifacts
        if: ${{ env.RUN_BUILD == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.extension }}-${{matrix.pgVersion}}-${{ matrix.arch }}
          if-no-files-found: error
          retention-days: 7
          path: |
            out/**/*.*
