---
apiVersion: v1
name: tsm_system_time
repository: https://github.com/postgres/postgres
description: TABLESAMPLE method which accepts time in milliseconds as a limit
license: PostgreSQL
arch:
- amd64
- arm64
maintainers:
- name: Jonathan Dance
  email: jd@hydra.so
- name: Owen Ou
  email: o@hydra.so
build:
  main:
  - name: Build tsm_system_time
    run: |
      cd contrib/tsm_system_time
      make
      DESTDIR=${DESTDIR} make install
overrides:
  pgVersions:
    '16':
      source: https://ftp.postgresql.org/pub/source/v16.1/postgresql-16.1.tar.gz
      version: 16.1.0
      homepage: https://www.postgresql.org/docs/16/tsm-system-time.html
      readme: |
        For formatted documentation, please see https://www.postgresql.org/docs/16/tsm-system-time.html.

        ```
           #[1]F.46. tsm_system_rows -- the SYSTEM_ROWS sampling method for
           TABLESAMPLE [2]F.48. unaccent -- a text search dictionary which removes
           diacritics

           F.47. tsm_system_time -- the SYSTEM_TIME sampling method for
           TABLESAMPLE
           [3]Prev  [4]Up Appendix F. Additional Supplied Modules and Extensions
           [5]Home  [6]Next
             __________________________________________________________________

        F.47. tsm_system_time -- the SYSTEM_TIME sampling method for TABLESAMPLE [7]#

           [8]F.47.1. Examples

           The tsm_system_time module provides the table sampling method
           SYSTEM_TIME, which can be used in the TABLESAMPLE clause of a [9]SELECT
           command.

           This table sampling method accepts a single floating-point argument
           that is the maximum number of milliseconds to spend reading the table.
           This gives you direct control over how long the query takes, at the
           price that the size of the sample becomes hard to predict. The
           resulting sample will contain as many rows as could be read in the
           specified time, unless the whole table has been read first.

           Like the built-in SYSTEM sampling method, SYSTEM_TIME performs
           block-level sampling, so that the sample is not completely random but
           may be subject to clustering effects, especially if only a small number
           of rows are selected.

           SYSTEM_TIME does not support the REPEATABLE clause.

           This module is considered "trusted", that is, it can be installed by
           non-superusers who have CREATE privilege on the current database.

        F.47.1. Examples [10]#

           Here is an example of selecting a sample of a table with SYSTEM_TIME.
           First install the extension:
        CREATE EXTENSION tsm_system_time;

           Then you can use it in a SELECT command, for instance:
        SELECT * FROM my_table TABLESAMPLE SYSTEM_TIME(1000);

           This command will return as large a sample of my_table as it can read
           in 1 second (1000 milliseconds). Of course, if the whole table can be
           read in under 1 second, all its rows will be returned.
             __________________________________________________________________

           [11]Prev  [12]Up  [13]Next
           F.46. tsm_system_rows -- the SYSTEM_ROWS sampling method for
           TABLESAMPLE  [14]Home  F.48. unaccent -- a text search dictionary which
           removes diacritics


        ```
    '15':
      source: https://ftp.postgresql.org/pub/source/v15.5/postgresql-15.5.tar.gz
      version: 15.5.0
      homepage: https://www.postgresql.org/docs/15/tsm-system-time.html
      readme: |
        For formatted documentation, please see https://www.postgresql.org/docs/15/tsm-system-time.html.

        ```
           #[1]F.46. tsm_system_rows [2]F.48. unaccent

                                   F.47. tsm_system_time
           [3]Prev  [4]Up Appendix F. Additional Supplied Modules [5]Home  [6]Next
             __________________________________________________________________

        F.47. tsm_system_time

           [7]F.47.1. Examples

           The tsm_system_time module provides the table sampling method
           SYSTEM_TIME, which can be used in the TABLESAMPLE clause of a [8]SELECT
           command.

           This table sampling method accepts a single floating-point argument
           that is the maximum number of milliseconds to spend reading the table.
           This gives you direct control over how long the query takes, at the
           price that the size of the sample becomes hard to predict. The
           resulting sample will contain as many rows as could be read in the
           specified time, unless the whole table has been read first.

           Like the built-in SYSTEM sampling method, SYSTEM_TIME performs
           block-level sampling, so that the sample is not completely random but
           may be subject to clustering effects, especially if only a small number
           of rows are selected.

           SYSTEM_TIME does not support the REPEATABLE clause.

           This module is considered "trusted", that is, it can be installed by
           non-superusers who have CREATE privilege on the current database.

        F.47.1. Examples

           Here is an example of selecting a sample of a table with SYSTEM_TIME.
           First install the extension:
        CREATE EXTENSION tsm_system_time;

           Then you can use it in a SELECT command, for instance:
        SELECT * FROM my_table TABLESAMPLE SYSTEM_TIME(1000);

           This command will return as large a sample of my_table as it can read
           in 1 second (1000 milliseconds). Of course, if the whole table can be
           read in under 1 second, all its rows will be returned.
             __________________________________________________________________

           [9]Prev                 [10]Up         [11]Next
           F.46. tsm_system_rows  [12]Home  F.48. unaccent


        ```
    '14':
      source: https://ftp.postgresql.org/pub/source/v14.10/postgresql-14.10.tar.gz
      version: 14.10.0
      homepage: https://www.postgresql.org/docs/14/tsm-system-time.html
      readme: |
        For formatted documentation, please see https://www.postgresql.org/docs/14/tsm-system-time.html.

        ```
           #[1]F.43. tsm_system_rows [2]F.45. unaccent

                                   F.44. tsm_system_time
           [3]Prev  [4]Up Appendix F. Additional Supplied Modules [5]Home  [6]Next
             __________________________________________________________________

        F.44. tsm_system_time

           [7]F.44.1. Examples

           The tsm_system_time module provides the table sampling method
           SYSTEM_TIME, which can be used in the TABLESAMPLE clause of a [8]SELECT
           command.

           This table sampling method accepts a single floating-point argument
           that is the maximum number of milliseconds to spend reading the table.
           This gives you direct control over how long the query takes, at the
           price that the size of the sample becomes hard to predict. The
           resulting sample will contain as many rows as could be read in the
           specified time, unless the whole table has been read first.

           Like the built-in SYSTEM sampling method, SYSTEM_TIME performs
           block-level sampling, so that the sample is not completely random but
           may be subject to clustering effects, especially if only a small number
           of rows are selected.

           SYSTEM_TIME does not support the REPEATABLE clause.

           This module is considered "trusted", that is, it can be installed by
           non-superusers who have CREATE privilege on the current database.

        F.44.1. Examples

           Here is an example of selecting a sample of a table with SYSTEM_TIME.
           First install the extension:
        CREATE EXTENSION tsm_system_time;

           Then you can use it in a SELECT command, for instance:
        SELECT * FROM my_table TABLESAMPLE SYSTEM_TIME(1000);

           This command will return as large a sample of my_table as it can read
           in 1 second (1000 milliseconds). Of course, if the whole table can be
           read in under 1 second, all its rows will be returned.
             __________________________________________________________________

           [9]Prev                 [10]Up         [11]Next
           F.43. tsm_system_rows  [12]Home  F.45. unaccent


        ```
    '13':
      source: https://ftp.postgresql.org/pub/source/v13.13/postgresql-13.13.tar.gz
      version: 13.13.0
      homepage: https://www.postgresql.org/docs/13/tsm-system-time.html
      readme: |
        For formatted documentation, please see https://www.postgresql.org/docs/13/tsm-system-time.html.

        ```
           #[1]F.41. tsm_system_rows [2]F.43. unaccent

                                   F.42. tsm_system_time
           [3]Prev  [4]Up Appendix F. Additional Supplied Modules [5]Home  [6]Next
             __________________________________________________________________

        F.42. tsm_system_time

           [7]F.42.1. Examples

           The tsm_system_time module provides the table sampling method
           SYSTEM_TIME, which can be used in the TABLESAMPLE clause of a [8]SELECT
           command.

           This table sampling method accepts a single floating-point argument
           that is the maximum number of milliseconds to spend reading the table.
           This gives you direct control over how long the query takes, at the
           price that the size of the sample becomes hard to predict. The
           resulting sample will contain as many rows as could be read in the
           specified time, unless the whole table has been read first.

           Like the built-in SYSTEM sampling method, SYSTEM_TIME performs
           block-level sampling, so that the sample is not completely random but
           may be subject to clustering effects, especially if only a small number
           of rows are selected.

           SYSTEM_TIME does not support the REPEATABLE clause.

           This module is considered "trusted", that is, it can be installed by
           non-superusers who have CREATE privilege on the current database.

        F.42.1. Examples

           Here is an example of selecting a sample of a table with SYSTEM_TIME.
           First install the extension:
        CREATE EXTENSION tsm_system_time;

           Then you can use it in a SELECT command, for instance:
        SELECT * FROM my_table TABLESAMPLE SYSTEM_TIME(1000);

           This command will return as large a sample of my_table as it can read
           in 1 second (1000 milliseconds). Of course, if the whole table can be
           read in under 1 second, all its rows will be returned.
             __________________________________________________________________

           [9]Prev                 [10]Up         [11]Next
           F.41. tsm_system_rows  [12]Home  F.43. unaccent


        ```
pgVersions:
- '16'
- '15'
- '14'
- '13'
