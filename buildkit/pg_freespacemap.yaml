---
apiVersion: v1
name: pg_freespacemap
repository: https://github.com/postgres/postgres
description: examine the free space map (FSM)
license: PostgreSQL
arch:
- amd64
- arm64
maintainers:
- name: Jonathan Dance
  email: jd@hydra.so
- name: Owen Ou
  email: o@hydra.so
build:
  main:
  - name: Build pg_freespacemap
    run: |
      cd contrib/pg_freespacemap
      make
      DESTDIR=${DESTDIR} make install
overrides:
  pgVersions:
    '16':
      source: https://ftp.postgresql.org/pub/source/v16.1/postgresql-16.1.tar.gz
      version: 16.1.0
      homepage: https://www.postgresql.org/docs/16/pgfreespacemap.html
      readme: |
        For formatted documentation, please see https://www.postgresql.org/docs/16/pgfreespacemap.html.

        ```
           #[1]F.28. pgcrypto -- cryptographic functions [2]F.30. pg_prewarm --
           preload relation data into buffer caches

           F.29. pg_freespacemap -- examine the free space map
           [3]Prev  [4]Up Appendix F. Additional Supplied Modules and Extensions
           [5]Home  [6]Next
             __________________________________________________________________

        F.29. pg_freespacemap -- examine the free space map [7]#

           [8]F.29.1. Functions
           [9]F.29.2. Sample Output
           [10]F.29.3. Author

           The pg_freespacemap module provides a means for examining the [11]free
           space map (FSM). It provides a function called pg_freespace, or two
           overloaded functions, to be precise. The functions show the value
           recorded in the free space map for a given page, or for all pages in
           the relation.

           By default use is restricted to superusers and roles with privileges of
           the pg_stat_scan_tables role. Access may be granted to others using
           GRANT.

        F.29.1. Functions [12]#

           pg_freespace(rel regclass IN, blkno bigint IN) returns int2
                  Returns the amount of free space on the page of the relation,
                  specified by blkno, according to the FSM.

           pg_freespace(rel regclass IN, blkno OUT bigint, avail OUT int2)
                  Displays the amount of free space on each page of the relation,
                  according to the FSM. A set of (blkno bigint, avail int2) tuples
                  is returned, one tuple for each page in the relation.

           The values stored in the free space map are not exact. They're rounded
           to precision of 1/256th of BLCKSZ (32 bytes with default BLCKSZ), and
           they're not kept fully up-to-date as tuples are inserted and updated.

           For indexes, what is tracked is entirely-unused pages, rather than free
           space within pages. Therefore, the values are not meaningful, just
           whether a page is full or empty.

        F.29.2. Sample Output [13]#

        postgres=# SELECT * FROM pg_freespace('foo');
         blkno | avail
        -------+-------
             0 |     0
             1 |     0
             2 |     0
             3 |    32
             4 |   704
             5 |   704
             6 |   704
             7 |  1216
             8 |   704
             9 |   704
            10 |   704
            11 |   704
            12 |   704
            13 |   704
            14 |   704
            15 |   704
            16 |   704
            17 |   704
            18 |   704
            19 |  3648
        (20 rows)

        postgres=# SELECT * FROM pg_freespace('foo', 7);
         pg_freespace
        --------------
                 1216
        (1 row)

        F.29.3. Author [14]#

           Original version by Mark Kirkwood <[15]markir@paradise.net.nz>.
           Rewritten in version 8.4 to suit new FSM implementation by Heikki
           Linnakangas <[16]heikki@enterprisedb.com>
             __________________________________________________________________

           [17]Prev  [18]Up  [19]Next
           F.28. pgcrypto -- cryptographic functions  [20]Home  F.30. pg_prewarm
           -- preload relation data into buffer caches


        ```
    '15':
      source: https://ftp.postgresql.org/pub/source/v15.5/postgresql-15.5.tar.gz
      version: 15.5.0
      homepage: https://www.postgresql.org/docs/15/pgfreespacemap.html
      readme: |
        For formatted documentation, please see https://www.postgresql.org/docs/15/pgfreespacemap.html.

        ```
           #[1]F.28. pgcrypto [2]F.30. pg_prewarm

                                   F.29. pg_freespacemap
           [3]Prev  [4]Up Appendix F. Additional Supplied Modules [5]Home  [6]Next
             __________________________________________________________________

        F.29. pg_freespacemap

           [7]F.29.1. Functions
           [8]F.29.2. Sample Output
           [9]F.29.3. Author

           The pg_freespacemap module provides a means for examining the [10]free
           space map (FSM). It provides a function called pg_freespace, or two
           overloaded functions, to be precise. The functions show the value
           recorded in the free space map for a given page, or for all pages in
           the relation.

           By default use is restricted to superusers and roles with privileges of
           the pg_stat_scan_tables role. Access may be granted to others using
           GRANT.

        F.29.1. Functions

           pg_freespace(rel regclass IN, blkno bigint IN) returns int2
                  Returns the amount of free space on the page of the relation,
                  specified by blkno, according to the FSM.

           pg_freespace(rel regclass IN, blkno OUT bigint, avail OUT int2)
                  Displays the amount of free space on each page of the relation,
                  according to the FSM. A set of (blkno bigint, avail int2) tuples
                  is returned, one tuple for each page in the relation.

           The values stored in the free space map are not exact. They're rounded
           to precision of 1/256th of BLCKSZ (32 bytes with default BLCKSZ), and
           they're not kept fully up-to-date as tuples are inserted and updated.

           For indexes, what is tracked is entirely-unused pages, rather than free
           space within pages. Therefore, the values are not meaningful, just
           whether a page is full or empty.

        F.29.2. Sample Output

        postgres=# SELECT * FROM pg_freespace('foo');
         blkno | avail
        -------+-------
             0 |     0
             1 |     0
             2 |     0
             3 |    32
             4 |   704
             5 |   704
             6 |   704
             7 |  1216
             8 |   704
             9 |   704
            10 |   704
            11 |   704
            12 |   704
            13 |   704
            14 |   704
            15 |   704
            16 |   704
            17 |   704
            18 |   704
            19 |  3648
        (20 rows)

        postgres=# SELECT * FROM pg_freespace('foo', 7);
         pg_freespace
        --------------
                 1216
        (1 row)

        F.29.3. Author

           Original version by Mark Kirkwood <[11]markir@paradise.net.nz>.
           Rewritten in version 8.4 to suit new FSM implementation by Heikki
           Linnakangas <[12]heikki@enterprisedb.com>
             __________________________________________________________________

           [13]Prev         [14]Up           [15]Next
           F.28. pgcrypto  [16]Home  F.30. pg_prewarm


        ```
    '14':
      source: https://ftp.postgresql.org/pub/source/v14.10/postgresql-14.10.tar.gz
      version: 14.10.0
      homepage: https://www.postgresql.org/docs/14/pgfreespacemap.html
      readme: |
        For formatted documentation, please see https://www.postgresql.org/docs/14/pgfreespacemap.html.

        ```
           #[1]F.26. pgcrypto [2]F.28. pg_prewarm

                                   F.27. pg_freespacemap
           [3]Prev  [4]Up Appendix F. Additional Supplied Modules [5]Home  [6]Next
             __________________________________________________________________

        F.27. pg_freespacemap

           [7]F.27.1. Functions
           [8]F.27.2. Sample Output
           [9]F.27.3. Author

           The pg_freespacemap module provides a means for examining the free
           space map (FSM). It provides a function called pg_freespace, or two
           overloaded functions, to be precise. The functions show the value
           recorded in the free space map for a given page, or for all pages in
           the relation.

           By default use is restricted to superusers and members of the
           pg_stat_scan_tables role. Access may be granted to others using GRANT.

        F.27.1. Functions

           pg_freespace(rel regclass IN, blkno bigint IN) returns int2
                  Returns the amount of free space on the page of the relation,
                  specified by blkno, according to the FSM.

           pg_freespace(rel regclass IN, blkno OUT bigint, avail OUT int2)
                  Displays the amount of free space on each page of the relation,
                  according to the FSM. A set of (blkno bigint, avail int2) tuples
                  is returned, one tuple for each page in the relation.

           The values stored in the free space map are not exact. They're rounded
           to precision of 1/256th of BLCKSZ (32 bytes with default BLCKSZ), and
           they're not kept fully up-to-date as tuples are inserted and updated.

           For indexes, what is tracked is entirely-unused pages, rather than free
           space within pages. Therefore, the values are not meaningful, just
           whether a page is full or empty.

        F.27.2. Sample Output

        postgres=# SELECT * FROM pg_freespace('foo');
         blkno | avail
        -------+-------
             0 |     0
             1 |     0
             2 |     0
             3 |    32
             4 |   704
             5 |   704
             6 |   704
             7 |  1216
             8 |   704
             9 |   704
            10 |   704
            11 |   704
            12 |   704
            13 |   704
            14 |   704
            15 |   704
            16 |   704
            17 |   704
            18 |   704
            19 |  3648
        (20 rows)

        postgres=# SELECT * FROM pg_freespace('foo', 7);
         pg_freespace
        --------------
                 1216
        (1 row)

        F.27.3. Author

           Original version by Mark Kirkwood <[10]markir@paradise.net.nz>.
           Rewritten in version 8.4 to suit new FSM implementation by Heikki
           Linnakangas <[11]heikki@enterprisedb.com>
             __________________________________________________________________

           [12]Prev         [13]Up           [14]Next
           F.26. pgcrypto  [15]Home  F.28. pg_prewarm


        ```
    '13':
      source: https://ftp.postgresql.org/pub/source/v13.13/postgresql-13.13.tar.gz
      version: 13.13.0
      homepage: https://www.postgresql.org/docs/13/pgfreespacemap.html
      readme: |
        For formatted documentation, please see https://www.postgresql.org/docs/13/pgfreespacemap.html.

        ```
           #[1]F.25. pgcrypto [2]F.27. pg_prewarm

                                   F.26. pg_freespacemap
           [3]Prev  [4]Up Appendix F. Additional Supplied Modules [5]Home  [6]Next
             __________________________________________________________________

        F.26. pg_freespacemap

           [7]F.26.1. Functions
           [8]F.26.2. Sample Output
           [9]F.26.3. Author

           The pg_freespacemap module provides a means for examining the free
           space map (FSM). It provides a function called pg_freespace, or two
           overloaded functions, to be precise. The functions show the value
           recorded in the free space map for a given page, or for all pages in
           the relation.

           By default use is restricted to superusers and members of the
           pg_stat_scan_tables role. Access may be granted to others using GRANT.

        F.26.1. Functions

           pg_freespace(rel regclass IN, blkno bigint IN) returns int2
                  Returns the amount of free space on the page of the relation,
                  specified by blkno, according to the FSM.

           pg_freespace(rel regclass IN, blkno OUT bigint, avail OUT int2)
                  Displays the amount of free space on each page of the relation,
                  according to the FSM. A set of (blkno bigint, avail int2) tuples
                  is returned, one tuple for each page in the relation.

           The values stored in the free space map are not exact. They're rounded
           to precision of 1/256th of BLCKSZ (32 bytes with default BLCKSZ), and
           they're not kept fully up-to-date as tuples are inserted and updated.

           For indexes, what is tracked is entirely-unused pages, rather than free
           space within pages. Therefore, the values are not meaningful, just
           whether a page is full or empty.

        Note

           The interface was changed in version 8.4, to reflect the new FSM
           implementation introduced in the same version.

        F.26.2. Sample Output

        postgres=# SELECT * FROM pg_freespace('foo');
         blkno | avail
        -------+-------
             0 |     0
             1 |     0
             2 |     0
             3 |    32
             4 |   704
             5 |   704
             6 |   704
             7 |  1216
             8 |   704
             9 |   704
            10 |   704
            11 |   704
            12 |   704
            13 |   704
            14 |   704
            15 |   704
            16 |   704
            17 |   704
            18 |   704
            19 |  3648
        (20 rows)

        postgres=# SELECT * FROM pg_freespace('foo', 7);
         pg_freespace
        --------------
                 1216
        (1 row)

        F.26.3. Author

           Original version by Mark Kirkwood <[10]markir@paradise.net.nz>.
           Rewritten in version 8.4 to suit new FSM implementation by Heikki
           Linnakangas <[11]heikki@enterprisedb.com>
             __________________________________________________________________

           [12]Prev         [13]Up           [14]Next
           F.25. pgcrypto  [15]Home  F.27. pg_prewarm


        ```
pgVersions:
- '16'
- '15'
- '14'
- '13'
