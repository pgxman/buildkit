---
apiVersion: v1
name: dict_int
repository: https://github.com/postgres/postgres
description: text search dictionary template for integers
license: PostgreSQL
arch:
- amd64
- arm64
maintainers:
- name: Jonathan Dance
  email: jd@hydra.so
- name: Owen Ou
  email: o@hydra.so
build:
  main:
  - name: Build dict_int
    run: |
      cd contrib/dict_int
      make
      DESTDIR=${DESTDIR} make install
overrides:
  pgVersions:
    '16':
      source: https://ftp.postgresql.org/pub/source/v16.1/postgresql-16.1.tar.gz
      version: 16.1.0
      homepage: https://www.postgresql.org/docs/16/dict-int.html
      readme: |
        For formatted documentation, please see https://www.postgresql.org/docs/16/dict-int.html.

        ```
           #[1]dblink_build_sql_update [2]F.14. dict_xsyn -- example synonym
           full-text search dictionary

           F.13. dict_int -- example full-text search dictionary for integers
           [3]Prev  [4]Up Appendix F. Additional Supplied Modules and Extensions
           [5]Home  [6]Next
             __________________________________________________________________

        F.13. dict_int -- example full-text search dictionary for integers [7]#

           [8]F.13.1. Configuration
           [9]F.13.2. Usage

           dict_int is an example of an add-on dictionary template for full-text
           search. The motivation for this example dictionary is to control the
           indexing of integers (signed and unsigned), allowing such numbers to be
           indexed while preventing excessive growth in the number of unique
           words, which greatly affects the performance of searching.

           This module is considered "trusted", that is, it can be installed by
           non-superusers who have CREATE privilege on the current database.

        F.13.1. Configuration [10]#

           The dictionary accepts three options:
             * The maxlen parameter specifies the maximum number of digits allowed
               in an integer word. The default value is 6.
             * The rejectlong parameter specifies whether an overlength integer
               should be truncated or ignored. If rejectlong is false (the
               default), the dictionary returns the first maxlen digits of the
               integer. If rejectlong is true, the dictionary treats an overlength
               integer as a stop word, so that it will not be indexed. Note that
               this also means that such an integer cannot be searched for.
             * The absval parameter specifies whether leading "+" or "-" signs
               should be removed from integer words. The default is false. When
               true, the sign is removed before maxlen is applied.

        F.13.2. Usage [11]#

           Installing the dict_int extension creates a text search template
           intdict_template and a dictionary intdict based on it, with the default
           parameters. You can alter the parameters, for example
        mydb# ALTER TEXT SEARCH DICTIONARY intdict (MAXLEN = 4, REJECTLONG = true);
        ALTER TEXT SEARCH DICTIONARY

           or create new dictionaries based on the template.

           To test the dictionary, you can try
        mydb# select ts_lexize('intdict', '12345678');
         ts_lexize
        -----------
         {123456}

           but real-world usage will involve including it in a text search
           configuration as described in [12]Chapter 12. That might look like
           this:
        ALTER TEXT SEARCH CONFIGURATION english
            ALTER MAPPING FOR int, uint WITH intdict;
             __________________________________________________________________

           [13]Prev  [14]Up  [15]Next
           dblink_build_sql_update  [16]Home  F.14. dict_xsyn -- example synonym
           full-text search dictionary


        ```
    '15':
      source: https://ftp.postgresql.org/pub/source/v15.5/postgresql-15.5.tar.gz
      version: 15.5.0
      homepage: https://www.postgresql.org/docs/15/dict-int.html
      readme: |
        For formatted documentation, please see https://www.postgresql.org/docs/15/dict-int.html.

        ```
           #[1]dblink_build_sql_update [2]F.14. dict_xsyn

                                       F.13. dict_int
           [3]Prev  [4]Up Appendix F. Additional Supplied Modules [5]Home  [6]Next
             __________________________________________________________________

        F.13. dict_int

           [7]F.13.1. Configuration
           [8]F.13.2. Usage

           dict_int is an example of an add-on dictionary template for full-text
           search. The motivation for this example dictionary is to control the
           indexing of integers (signed and unsigned), allowing such numbers to be
           indexed while preventing excessive growth in the number of unique
           words, which greatly affects the performance of searching.

           This module is considered "trusted", that is, it can be installed by
           non-superusers who have CREATE privilege on the current database.

        F.13.1. Configuration

           The dictionary accepts three options:
             * The maxlen parameter specifies the maximum number of digits allowed
               in an integer word. The default value is 6.
             * The rejectlong parameter specifies whether an overlength integer
               should be truncated or ignored. If rejectlong is false (the
               default), the dictionary returns the first maxlen digits of the
               integer. If rejectlong is true, the dictionary treats an overlength
               integer as a stop word, so that it will not be indexed. Note that
               this also means that such an integer cannot be searched for.
             * The absval parameter specifies whether leading "+" or "-" signs
               should be removed from integer words. The default is false. When
               true, the sign is removed before maxlen is applied.

        F.13.2. Usage

           Installing the dict_int extension creates a text search template
           intdict_template and a dictionary intdict based on it, with the default
           parameters. You can alter the parameters, for example
        mydb# ALTER TEXT SEARCH DICTIONARY intdict (MAXLEN = 4, REJECTLONG = true);
        ALTER TEXT SEARCH DICTIONARY

           or create new dictionaries based on the template.

           To test the dictionary, you can try
        mydb# select ts_lexize('intdict', '12345678');
         ts_lexize
        -----------
         {123456}

           but real-world usage will involve including it in a text search
           configuration as described in [9]Chapter 12. That might look like this:
        ALTER TEXT SEARCH CONFIGURATION english
            ALTER MAPPING FOR int, uint WITH intdict;
             __________________________________________________________________

           [10]Prev                  [11]Up          [12]Next
           dblink_build_sql_update  [13]Home  F.14. dict_xsyn


        ```
    '14':
      source: https://ftp.postgresql.org/pub/source/v14.10/postgresql-14.10.tar.gz
      version: 14.10.0
      homepage: https://www.postgresql.org/docs/14/dict-int.html
      readme: |
        For formatted documentation, please see https://www.postgresql.org/docs/14/dict-int.html.

        ```
           #[1]dblink_build_sql_update [2]F.12. dict_xsyn

                                       F.11. dict_int
           [3]Prev  [4]Up Appendix F. Additional Supplied Modules [5]Home  [6]Next
             __________________________________________________________________

        F.11. dict_int

           [7]F.11.1. Configuration
           [8]F.11.2. Usage

           dict_int is an example of an add-on dictionary template for full-text
           search. The motivation for this example dictionary is to control the
           indexing of integers (signed and unsigned), allowing such numbers to be
           indexed while preventing excessive growth in the number of unique
           words, which greatly affects the performance of searching.

           This module is considered "trusted", that is, it can be installed by
           non-superusers who have CREATE privilege on the current database.

        F.11.1. Configuration

           The dictionary accepts three options:
             * The maxlen parameter specifies the maximum number of digits allowed
               in an integer word. The default value is 6.
             * The rejectlong parameter specifies whether an overlength integer
               should be truncated or ignored. If rejectlong is false (the
               default), the dictionary returns the first maxlen digits of the
               integer. If rejectlong is true, the dictionary treats an overlength
               integer as a stop word, so that it will not be indexed. Note that
               this also means that such an integer cannot be searched for.
             * The absval parameter specifies whether leading "+" or "-" signs
               should be removed from integer words. The default is false. When
               true, the sign is removed before maxlen is applied.

        F.11.2. Usage

           Installing the dict_int extension creates a text search template
           intdict_template and a dictionary intdict based on it, with the default
           parameters. You can alter the parameters, for example
        mydb# ALTER TEXT SEARCH DICTIONARY intdict (MAXLEN = 4, REJECTLONG = true);
        ALTER TEXT SEARCH DICTIONARY

           or create new dictionaries based on the template.

           To test the dictionary, you can try
        mydb# select ts_lexize('intdict', '12345678');
         ts_lexize
        -----------
         {123456}

           but real-world usage will involve including it in a text search
           configuration as described in [9]Chapter 12. That might look like this:
        ALTER TEXT SEARCH CONFIGURATION english
            ALTER MAPPING FOR int, uint WITH intdict;
             __________________________________________________________________

           [10]Prev                  [11]Up          [12]Next
           dblink_build_sql_update  [13]Home  F.12. dict_xsyn


        ```
    '13':
      source: https://ftp.postgresql.org/pub/source/v13.13/postgresql-13.13.tar.gz
      version: 13.13.0
      homepage: https://www.postgresql.org/docs/13/dict-int.html
      readme: |
        For formatted documentation, please see https://www.postgresql.org/docs/13/dict-int.html.

        ```
           #[1]dblink_build_sql_update [2]F.12. dict_xsyn

                                       F.11. dict_int
           [3]Prev  [4]Up Appendix F. Additional Supplied Modules [5]Home  [6]Next
             __________________________________________________________________

        F.11. dict_int

           [7]F.11.1. Configuration
           [8]F.11.2. Usage

           dict_int is an example of an add-on dictionary template for full-text
           search. The motivation for this example dictionary is to control the
           indexing of integers (signed and unsigned), allowing such numbers to be
           indexed while preventing excessive growth in the number of unique
           words, which greatly affects the performance of searching.

           This module is considered "trusted", that is, it can be installed by
           non-superusers who have CREATE privilege on the current database.

        F.11.1. Configuration

           The dictionary accepts three options:
             * The maxlen parameter specifies the maximum number of digits allowed
               in an integer word. The default value is 6.
             * The rejectlong parameter specifies whether an overlength integer
               should be truncated or ignored. If rejectlong is false (the
               default), the dictionary returns the first maxlen digits of the
               integer. If rejectlong is true, the dictionary treats an overlength
               integer as a stop word, so that it will not be indexed. Note that
               this also means that such an integer cannot be searched for.
             * The absval parameter specifies whether leading "+" or "-" signs
               should be removed from integer words. The default is false. When
               true, the sign is removed before maxlen is applied.

        F.11.2. Usage

           Installing the dict_int extension creates a text search template
           intdict_template and a dictionary intdict based on it, with the default
           parameters. You can alter the parameters, for example
        mydb# ALTER TEXT SEARCH DICTIONARY intdict (MAXLEN = 4, REJECTLONG = true);
        ALTER TEXT SEARCH DICTIONARY

           or create new dictionaries based on the template.

           To test the dictionary, you can try
        mydb# select ts_lexize('intdict', '12345678');
         ts_lexize
        -----------
         {123456}

           but real-world usage will involve including it in a text search
           configuration as described in [9]Chapter 12. That might look like this:
        ALTER TEXT SEARCH CONFIGURATION english
            ALTER MAPPING FOR int, uint WITH intdict;
             __________________________________________________________________

           [10]Prev                  [11]Up          [12]Next
           dblink_build_sql_update  [13]Home  F.12. dict_xsyn


        ```
pgVersions:
- '16'
- '15'
- '14'
- '13'
